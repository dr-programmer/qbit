Terminals unused in grammar

    TOKEN_AND
    TOKEN_COLON
    TOKEN_SEMI
    TOKEN_ERROR


State 27 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | ε

    4 decl: name TOKEN_LPAREN expr TOKEN_RPAREN
    5     | name TOKEN_LPAREN fields TOKEN_RPAREN
    6     | TOKEN_LCRBR registers TOKEN_RCRBR circuit

    7 name: TOKEN_IDENT

    8 expr: algebra

    9 algebra: algebra TOKEN_PLUS term
   10        | algebra TOKEN_MINUS term
   11        | term

   12 term: term TOKEN_MUL factor
   13     | term TOKEN_DIV factor
   14     | term TOKEN_MODULUS factor
   15     | term TOKEN_TENSOR_PRODUCT factor
   16     | factor

   17 factor: TOKEN_LPAREN name TOKEN_RPAREN
   18       | TOKEN_MINUS factor
   19       | TOKEN_SQRT factor
   20       | number
   21       | TOKEN_SEPARATOR number TOKEN_GREATER
   22       | TOKEN_LESS number TOKEN_SEPARATOR
   23       | TOKEN_LPAREN expr TOKEN_RPAREN

   24 number: TOKEN_COMPLEX_LITERAL

   25 fields: expr next_expr
   26       | ε

   27 next_expr: TOKEN_COMMA fields
   28          | TOKEN_SEPARATOR fields
   29          | ε

   30 registers: reg registers
   31          | ε

   32 reg: TOKEN_LCRBR fields TOKEN_RCRBR

   33 circuit: TOKEN_NEXT expr circuit
   34        | TOKEN_NEXT expr subsystem circuit
   35        | TOKEN_NEXT TOKEN_LESS circuit
   36        | TOKEN_NEXT TOKEN_LESS subsystem circuit
   37        | ε

   38 subsystem: TOKEN_LSQBR number TOKEN_RSQBR
   39          | TOKEN_LSQBR range TOKEN_RSQBR

   40 range: number TOKEN_RANGE number


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_RANGE (258) 40
    TOKEN_SEPARATOR (259) 21 22 28
    TOKEN_NEXT (260) 33 34 35 36
    TOKEN_AND (261)
    TOKEN_COMPLEX_LITERAL (262) 24
    TOKEN_IDENT (263) 7
    TOKEN_PLUS (264) 9
    TOKEN_MINUS (265) 10 18
    TOKEN_MUL (266) 12
    TOKEN_DIV (267) 13
    TOKEN_MODULUS (268) 14
    TOKEN_SQRT (269) 19
    TOKEN_TENSOR_PRODUCT (270) 15
    TOKEN_LESS (271) 22 35 36
    TOKEN_GREATER (272) 21
    TOKEN_LPAREN (273) 4 5 17 23
    TOKEN_RPAREN (274) 4 5 17 23
    TOKEN_LCRBR (275) 6 32
    TOKEN_RCRBR (276) 6 32
    TOKEN_LSQBR (277) 38 39
    TOKEN_RSQBR (278) 38 39
    TOKEN_COMMA (279) 27
    TOKEN_COLON (280)
    TOKEN_SEMI (281)
    TOKEN_ERROR (282)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    program <decl> (29)
        on left: 1
        on right: 0
    decl_list <decl> (30)
        on left: 2 3
        on right: 1 2
    decl <decl> (31)
        on left: 4 5 6
        on right: 2
    name <str> (32)
        on left: 7
        on right: 4 5 17
    expr (33)
        on left: 8
        on right: 4 23 25 33 34
    algebra (34)
        on left: 9 10 11
        on right: 8 9 10
    term (35)
        on left: 12 13 14 15 16
        on right: 9 10 11 12 13 14 15
    factor (36)
        on left: 17 18 19 20 21 22 23
        on right: 12 13 14 15 16 18 19
    number <complex> (37)
        on left: 24
        on right: 20 21 22 38 40
    fields (38)
        on left: 25 26
        on right: 5 27 28 32
    next_expr (39)
        on left: 27 28 29
        on right: 25
    registers (40)
        on left: 30 31
        on right: 6 30
    reg (41)
        on left: 32
        on right: 30
    circuit (42)
        on left: 33 34 35 36 37
        on right: 6 33 34 35 36
    subsystem (43)
        on left: 38 39
        on right: 34 36
    range (44)
        on left: 40
        on right: 39


State 0

    0 $accept: • program $end

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    name       go to state 6


State 1

    7 name: TOKEN_IDENT •

    $default  reduce using rule 7 (name)


State 2

    6 decl: TOKEN_LCRBR • registers TOKEN_RCRBR circuit

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 31 (registers)

    registers  go to state 8
    reg        go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: decl_list •

    $default  reduce using rule 1 (program)


State 5

    2 decl_list: decl • decl_list

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 11
    decl       go to state 5
    name       go to state 6


State 6

    4 decl: name • TOKEN_LPAREN expr TOKEN_RPAREN
    5     | name • TOKEN_LPAREN fields TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 12


State 7

   32 reg: TOKEN_LCRBR • fields TOKEN_RCRBR

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 26 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 24


State 8

    6 decl: TOKEN_LCRBR registers • TOKEN_RCRBR circuit

    TOKEN_RCRBR  shift, and go to state 25


State 9

   30 registers: reg • registers

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 31 (registers)

    registers  go to state 26
    reg        go to state 9


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 decl_list: decl decl_list •

    $default  reduce using rule 2 (decl_list)


State 12

    4 decl: name TOKEN_LPAREN • expr TOKEN_RPAREN
    5     | name TOKEN_LPAREN • fields TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 26 (fields)

    expr     go to state 27
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 28


State 13

   21 factor: TOKEN_SEPARATOR • number TOKEN_GREATER

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 29


State 14

   24 number: TOKEN_COMPLEX_LITERAL •

    $default  reduce using rule 24 (number)


State 15

   18 factor: TOKEN_MINUS • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 30
    number  go to state 23


State 16

   19 factor: TOKEN_SQRT • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 31
    number  go to state 23


State 17

   22 factor: TOKEN_LESS • number TOKEN_SEPARATOR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 32


State 18

   17 factor: TOKEN_LPAREN • name TOKEN_RPAREN
   23       | TOKEN_LPAREN • expr TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_IDENT            shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    name     go to state 33
    expr     go to state 34
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23


State 19

   25 fields: expr • next_expr

    TOKEN_SEPARATOR  shift, and go to state 35
    TOKEN_COMMA      shift, and go to state 36

    $default  reduce using rule 29 (next_expr)

    next_expr  go to state 37


State 20

    8 expr: algebra •
    9 algebra: algebra • TOKEN_PLUS term
   10        | algebra • TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 38
    TOKEN_MINUS  shift, and go to state 39

    $default  reduce using rule 8 (expr)


State 21

   11 algebra: term •
   12 term: term • TOKEN_MUL factor
   13     | term • TOKEN_DIV factor
   14     | term • TOKEN_MODULUS factor
   15     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 11 (algebra)


State 22

   16 term: factor •

    $default  reduce using rule 16 (term)


State 23

   20 factor: number •

    $default  reduce using rule 20 (factor)


State 24

   32 reg: TOKEN_LCRBR fields • TOKEN_RCRBR

    TOKEN_RCRBR  shift, and go to state 44


State 25

    6 decl: TOKEN_LCRBR registers TOKEN_RCRBR • circuit

    TOKEN_NEXT  shift, and go to state 45

    $default  reduce using rule 37 (circuit)

    circuit  go to state 46


State 26

   30 registers: reg registers •

    $default  reduce using rule 30 (registers)


State 27

    4 decl: name TOKEN_LPAREN expr • TOKEN_RPAREN
   25 fields: expr • next_expr

    TOKEN_SEPARATOR  shift, and go to state 35
    TOKEN_RPAREN     shift, and go to state 47
    TOKEN_COMMA      shift, and go to state 36

    TOKEN_RPAREN  [reduce using rule 29 (next_expr)]

    next_expr  go to state 37


State 28

    5 decl: name TOKEN_LPAREN fields • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 48


State 29

   21 factor: TOKEN_SEPARATOR number • TOKEN_GREATER

    TOKEN_GREATER  shift, and go to state 49


State 30

   18 factor: TOKEN_MINUS factor •

    $default  reduce using rule 18 (factor)


State 31

   19 factor: TOKEN_SQRT factor •

    $default  reduce using rule 19 (factor)


State 32

   22 factor: TOKEN_LESS number • TOKEN_SEPARATOR

    TOKEN_SEPARATOR  shift, and go to state 50


State 33

   17 factor: TOKEN_LPAREN name • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 51


State 34

   23 factor: TOKEN_LPAREN expr • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 52


State 35

   28 next_expr: TOKEN_SEPARATOR • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 26 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 53


State 36

   27 next_expr: TOKEN_COMMA • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 26 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 54


State 37

   25 fields: expr next_expr •

    $default  reduce using rule 25 (fields)


State 38

    9 algebra: algebra TOKEN_PLUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term    go to state 55
    factor  go to state 22
    number  go to state 23


State 39

   10 algebra: algebra TOKEN_MINUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term    go to state 56
    factor  go to state 22
    number  go to state 23


State 40

   12 term: term TOKEN_MUL • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 57
    number  go to state 23


State 41

   13 term: term TOKEN_DIV • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 58
    number  go to state 23


State 42

   14 term: term TOKEN_MODULUS • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 59
    number  go to state 23


State 43

   15 term: term TOKEN_TENSOR_PRODUCT • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 60
    number  go to state 23


State 44

   32 reg: TOKEN_LCRBR fields TOKEN_RCRBR •

    $default  reduce using rule 32 (reg)


State 45

   33 circuit: TOKEN_NEXT • expr circuit
   34        | TOKEN_NEXT • expr subsystem circuit
   35        | TOKEN_NEXT • TOKEN_LESS circuit
   36        | TOKEN_NEXT • TOKEN_LESS subsystem circuit

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 61
    TOKEN_LPAREN           shift, and go to state 18

    expr     go to state 62
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23


State 46

    6 decl: TOKEN_LCRBR registers TOKEN_RCRBR circuit •

    $default  reduce using rule 6 (decl)


State 47

    4 decl: name TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 4 (decl)


State 48

    5 decl: name TOKEN_LPAREN fields TOKEN_RPAREN •

    $default  reduce using rule 5 (decl)


State 49

   21 factor: TOKEN_SEPARATOR number TOKEN_GREATER •

    $default  reduce using rule 21 (factor)


State 50

   22 factor: TOKEN_LESS number TOKEN_SEPARATOR •

    $default  reduce using rule 22 (factor)


State 51

   17 factor: TOKEN_LPAREN name TOKEN_RPAREN •

    $default  reduce using rule 17 (factor)


State 52

   23 factor: TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 23 (factor)


State 53

   28 next_expr: TOKEN_SEPARATOR fields •

    $default  reduce using rule 28 (next_expr)


State 54

   27 next_expr: TOKEN_COMMA fields •

    $default  reduce using rule 27 (next_expr)


State 55

    9 algebra: algebra TOKEN_PLUS term •
   12 term: term • TOKEN_MUL factor
   13     | term • TOKEN_DIV factor
   14     | term • TOKEN_MODULUS factor
   15     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 9 (algebra)


State 56

   10 algebra: algebra TOKEN_MINUS term •
   12 term: term • TOKEN_MUL factor
   13     | term • TOKEN_DIV factor
   14     | term • TOKEN_MODULUS factor
   15     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 10 (algebra)


State 57

   12 term: term TOKEN_MUL factor •

    $default  reduce using rule 12 (term)


State 58

   13 term: term TOKEN_DIV factor •

    $default  reduce using rule 13 (term)


State 59

   14 term: term TOKEN_MODULUS factor •

    $default  reduce using rule 14 (term)


State 60

   15 term: term TOKEN_TENSOR_PRODUCT factor •

    $default  reduce using rule 15 (term)


State 61

   22 factor: TOKEN_LESS • number TOKEN_SEPARATOR
   35 circuit: TOKEN_NEXT TOKEN_LESS • circuit
   36        | TOKEN_NEXT TOKEN_LESS • subsystem circuit

    TOKEN_NEXT             shift, and go to state 45
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_LSQBR            shift, and go to state 63

    $default  reduce using rule 37 (circuit)

    number     go to state 32
    circuit    go to state 64
    subsystem  go to state 65


State 62

   33 circuit: TOKEN_NEXT expr • circuit
   34        | TOKEN_NEXT expr • subsystem circuit

    TOKEN_NEXT   shift, and go to state 45
    TOKEN_LSQBR  shift, and go to state 63

    $default  reduce using rule 37 (circuit)

    circuit    go to state 66
    subsystem  go to state 67


State 63

   38 subsystem: TOKEN_LSQBR • number TOKEN_RSQBR
   39          | TOKEN_LSQBR • range TOKEN_RSQBR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 68
    range   go to state 69


State 64

   35 circuit: TOKEN_NEXT TOKEN_LESS circuit •

    $default  reduce using rule 35 (circuit)


State 65

   36 circuit: TOKEN_NEXT TOKEN_LESS subsystem • circuit

    TOKEN_NEXT  shift, and go to state 45

    $default  reduce using rule 37 (circuit)

    circuit  go to state 70


State 66

   33 circuit: TOKEN_NEXT expr circuit •

    $default  reduce using rule 33 (circuit)


State 67

   34 circuit: TOKEN_NEXT expr subsystem • circuit

    TOKEN_NEXT  shift, and go to state 45

    $default  reduce using rule 37 (circuit)

    circuit  go to state 71


State 68

   38 subsystem: TOKEN_LSQBR number • TOKEN_RSQBR
   40 range: number • TOKEN_RANGE number

    TOKEN_RANGE  shift, and go to state 72
    TOKEN_RSQBR  shift, and go to state 73


State 69

   39 subsystem: TOKEN_LSQBR range • TOKEN_RSQBR

    TOKEN_RSQBR  shift, and go to state 74


State 70

   36 circuit: TOKEN_NEXT TOKEN_LESS subsystem circuit •

    $default  reduce using rule 36 (circuit)


State 71

   34 circuit: TOKEN_NEXT expr subsystem circuit •

    $default  reduce using rule 34 (circuit)


State 72

   40 range: number TOKEN_RANGE • number

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 75


State 73

   38 subsystem: TOKEN_LSQBR number TOKEN_RSQBR •

    $default  reduce using rule 38 (subsystem)


State 74

   39 subsystem: TOKEN_LSQBR range TOKEN_RSQBR •

    $default  reduce using rule 39 (subsystem)


State 75

   40 range: number TOKEN_RANGE number •

    $default  reduce using rule 40 (range)
