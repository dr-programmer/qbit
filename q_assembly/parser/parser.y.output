Terminals unused in grammar

    TOKEN_COLON
    TOKEN_SEMI
    TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | ε

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN
    5     | TOKEN_LCRBR registers TOKEN_RCRBR circuit
    6     | TOKEN_LOAD TOKEN_LPAREN string TOKEN_RPAREN

    7 name: TOKEN_IDENT

    8 expr: algebra

    9 algebra: algebra TOKEN_PLUS term
   10        | algebra TOKEN_MINUS term
   11        | term

   12 term: term TOKEN_MUL difactor
   13     | term TOKEN_DIV difactor
   14     | term TOKEN_MODULUS difactor
   15     | term TOKEN_TENSOR_PRODUCT difactor
   16     | difactor

   17 difactor: difactor TOKEN_POWER factor
   18         | difactor TOKEN_TENSOR_PRODUCT_N_TIMES factor
   19         | factor

   20 factor: TOKEN_LPAREN name TOKEN_RPAREN
   21       | TOKEN_MINUS factor
   22       | TOKEN_SQRT factor
   23       | number
   24       | TOKEN_SEPARATOR number TOKEN_GREATER
   25       | TOKEN_LESS number TOKEN_SEPARATOR
   26       | TOKEN_LPAREN expr TOKEN_RPAREN

   27 number: TOKEN_COMPLEX_LITERAL

   28 fields: expr next_expr
   29       | ε

   30 next_expr: TOKEN_COMMA fields
   31          | TOKEN_SEPARATOR fields
   32          | ε

   33 registers: reg registers
   34          | ε

   35 reg: TOKEN_LCRBR fields TOKEN_RCRBR

   36 circuit: TOKEN_NEXT c_step circuit
   37        | TOKEN_ALIAS c_alias circuit
   38        | ε

   39 c_step: expr
   40       | expr subsystem concurrent_gate
   41       | TOKEN_LESS
   42       | TOKEN_LESS subsystem concurrent_gate

   43 subsystem: TOKEN_LSQBR expr TOKEN_RSQBR
   44          | TOKEN_LSQBR range TOKEN_RSQBR

   45 range: expr TOKEN_RANGE expr

   46 concurrent_gate: TOKEN_AND c_step
   47                | ε

   48 c_alias: name
   49        | name subsystem

   50 string: TOKEN_STRING_LITERAL


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_RANGE (258) 45
    TOKEN_SEPARATOR (259) 24 25 31
    TOKEN_NEXT (260) 36
    TOKEN_ALIAS (261) 37
    TOKEN_AND (262) 46
    TOKEN_LOAD (263) 6
    TOKEN_COMPLEX_LITERAL (264) 27
    TOKEN_IDENT (265) 7
    TOKEN_STRING_LITERAL (266) 50
    TOKEN_PLUS (267) 9
    TOKEN_MINUS (268) 10 21
    TOKEN_MUL (269) 12
    TOKEN_DIV (270) 13
    TOKEN_MODULUS (271) 14
    TOKEN_TENSOR_PRODUCT (272) 15
    TOKEN_POWER (273) 17
    TOKEN_TENSOR_PRODUCT_N_TIMES (274) 18
    TOKEN_SQRT (275) 22
    TOKEN_LESS (276) 25 41 42
    TOKEN_GREATER (277) 24
    TOKEN_LPAREN (278) 4 6 20 26
    TOKEN_RPAREN (279) 4 6 20 26
    TOKEN_LCRBR (280) 5 35
    TOKEN_RCRBR (281) 5 35
    TOKEN_LSQBR (282) 43 44
    TOKEN_RSQBR (283) 43 44
    TOKEN_COMMA (284) 30
    TOKEN_COLON (285)
    TOKEN_SEMI (286)
    TOKEN_ERROR (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    program <decl> (34)
        on left: 1
        on right: 0
    decl_list <decl> (35)
        on left: 2 3
        on right: 1 2
    decl <decl> (36)
        on left: 4 5 6
        on right: 2
    name <str> (37)
        on left: 7
        on right: 4 20 48 49
    expr <expr> (38)
        on left: 8
        on right: 26 28 39 40 43 45
    algebra <expr> (39)
        on left: 9 10 11
        on right: 8 9 10
    term <expr> (40)
        on left: 12 13 14 15 16
        on right: 9 10 11 12 13 14 15
    difactor <expr> (41)
        on left: 17 18 19
        on right: 12 13 14 15 16 17 18
    factor <expr> (42)
        on left: 20 21 22 23 24 25 26
        on right: 17 18 19 21 22
    number <complex> (43)
        on left: 27
        on right: 23 24 25
    fields <expr> (44)
        on left: 28 29
        on right: 4 30 31 35
    next_expr <expr> (45)
        on left: 30 31 32
        on right: 28
    registers <expr> (46)
        on left: 33 34
        on right: 5 33
    reg <expr> (47)
        on left: 35
        on right: 33
    circuit <expr> (48)
        on left: 36 37 38
        on right: 5 36 37
    c_step <expr> (49)
        on left: 39 40 41 42
        on right: 36 46
    subsystem <expr> (50)
        on left: 43 44
        on right: 40 42 49
    range <expr> (51)
        on left: 45
        on right: 44
    concurrent_gate <expr> (52)
        on left: 46 47
        on right: 40 42
    c_alias <expr> (53)
        on left: 48 49
        on right: 37
    string <str> (54)
        on left: 50
        on right: 6


State 0

    0 $accept: • program $end

    TOKEN_LOAD   shift, and go to state 1
    TOKEN_IDENT  shift, and go to state 2
    TOKEN_LCRBR  shift, and go to state 3

    $default  reduce using rule 3 (decl_list)

    program    go to state 4
    decl_list  go to state 5
    decl       go to state 6
    name       go to state 7


State 1

    6 decl: TOKEN_LOAD • TOKEN_LPAREN string TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 8


State 2

    7 name: TOKEN_IDENT •

    $default  reduce using rule 7 (name)


State 3

    5 decl: TOKEN_LCRBR • registers TOKEN_RCRBR circuit

    TOKEN_LCRBR  shift, and go to state 9

    $default  reduce using rule 34 (registers)

    registers  go to state 10
    reg        go to state 11


State 4

    0 $accept: program • $end

    $end  shift, and go to state 12


State 5

    1 program: decl_list •

    $default  reduce using rule 1 (program)


State 6

    2 decl_list: decl • decl_list

    TOKEN_LOAD   shift, and go to state 1
    TOKEN_IDENT  shift, and go to state 2
    TOKEN_LCRBR  shift, and go to state 3

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 13
    decl       go to state 6
    name       go to state 7


State 7

    4 decl: name • TOKEN_LPAREN fields TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 14


State 8

    6 decl: TOKEN_LOAD TOKEN_LPAREN • string TOKEN_RPAREN

    TOKEN_STRING_LITERAL  shift, and go to state 15

    string  go to state 16


State 9

   35 reg: TOKEN_LCRBR • fields TOKEN_RCRBR

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    $default  reduce using rule 29 (fields)

    expr      go to state 23
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    fields    go to state 29


State 10

    5 decl: TOKEN_LCRBR registers • TOKEN_RCRBR circuit

    TOKEN_RCRBR  shift, and go to state 30


State 11

   33 registers: reg • registers

    TOKEN_LCRBR  shift, and go to state 9

    $default  reduce using rule 34 (registers)

    registers  go to state 31
    reg        go to state 11


State 12

    0 $accept: program $end •

    $default  accept


State 13

    2 decl_list: decl decl_list •

    $default  reduce using rule 2 (decl_list)


State 14

    4 decl: name TOKEN_LPAREN • fields TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    $default  reduce using rule 29 (fields)

    expr      go to state 23
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    fields    go to state 32


State 15

   50 string: TOKEN_STRING_LITERAL •

    $default  reduce using rule 50 (string)


State 16

    6 decl: TOKEN_LOAD TOKEN_LPAREN string • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 33


State 17

   24 factor: TOKEN_SEPARATOR • number TOKEN_GREATER

    TOKEN_COMPLEX_LITERAL  shift, and go to state 18

    number  go to state 34


State 18

   27 number: TOKEN_COMPLEX_LITERAL •

    $default  reduce using rule 27 (number)


State 19

   21 factor: TOKEN_MINUS • factor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    factor  go to state 35
    number  go to state 28


State 20

   22 factor: TOKEN_SQRT • factor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    factor  go to state 36
    number  go to state 28


State 21

   25 factor: TOKEN_LESS • number TOKEN_SEPARATOR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 18

    number  go to state 37


State 22

   20 factor: TOKEN_LPAREN • name TOKEN_RPAREN
   26       | TOKEN_LPAREN • expr TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_IDENT            shift, and go to state 2
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    name      go to state 38
    expr      go to state 39
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28


State 23

   28 fields: expr • next_expr

    TOKEN_SEPARATOR  shift, and go to state 40
    TOKEN_COMMA      shift, and go to state 41

    $default  reduce using rule 32 (next_expr)

    next_expr  go to state 42


State 24

    8 expr: algebra •
    9 algebra: algebra • TOKEN_PLUS term
   10        | algebra • TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 43
    TOKEN_MINUS  shift, and go to state 44

    $default  reduce using rule 8 (expr)


State 25

   11 algebra: term •
   12 term: term • TOKEN_MUL difactor
   13     | term • TOKEN_DIV difactor
   14     | term • TOKEN_MODULUS difactor
   15     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 45
    TOKEN_DIV             shift, and go to state 46
    TOKEN_MODULUS         shift, and go to state 47
    TOKEN_TENSOR_PRODUCT  shift, and go to state 48

    $default  reduce using rule 11 (algebra)


State 26

   16 term: difactor •
   17 difactor: difactor • TOKEN_POWER factor
   18         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 49
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 50

    $default  reduce using rule 16 (term)


State 27

   19 difactor: factor •

    $default  reduce using rule 19 (difactor)


State 28

   23 factor: number •

    $default  reduce using rule 23 (factor)


State 29

   35 reg: TOKEN_LCRBR fields • TOKEN_RCRBR

    TOKEN_RCRBR  shift, and go to state 51


State 30

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR • circuit

    TOKEN_NEXT   shift, and go to state 52
    TOKEN_ALIAS  shift, and go to state 53

    $default  reduce using rule 38 (circuit)

    circuit  go to state 54


State 31

   33 registers: reg registers •

    $default  reduce using rule 33 (registers)


State 32

    4 decl: name TOKEN_LPAREN fields • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 55


State 33

    6 decl: TOKEN_LOAD TOKEN_LPAREN string TOKEN_RPAREN •

    $default  reduce using rule 6 (decl)


State 34

   24 factor: TOKEN_SEPARATOR number • TOKEN_GREATER

    TOKEN_GREATER  shift, and go to state 56


State 35

   21 factor: TOKEN_MINUS factor •

    $default  reduce using rule 21 (factor)


State 36

   22 factor: TOKEN_SQRT factor •

    $default  reduce using rule 22 (factor)


State 37

   25 factor: TOKEN_LESS number • TOKEN_SEPARATOR

    TOKEN_SEPARATOR  shift, and go to state 57


State 38

   20 factor: TOKEN_LPAREN name • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 58


State 39

   26 factor: TOKEN_LPAREN expr • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 59


State 40

   31 next_expr: TOKEN_SEPARATOR • fields

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    $default  reduce using rule 29 (fields)

    expr      go to state 23
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    fields    go to state 60


State 41

   30 next_expr: TOKEN_COMMA • fields

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    $default  reduce using rule 29 (fields)

    expr      go to state 23
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    fields    go to state 61


State 42

   28 fields: expr next_expr •

    $default  reduce using rule 28 (fields)


State 43

    9 algebra: algebra TOKEN_PLUS • term

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    term      go to state 62
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28


State 44

   10 algebra: algebra TOKEN_MINUS • term

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    term      go to state 63
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28


State 45

   12 term: term TOKEN_MUL • difactor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    difactor  go to state 64
    factor    go to state 27
    number    go to state 28


State 46

   13 term: term TOKEN_DIV • difactor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    difactor  go to state 65
    factor    go to state 27
    number    go to state 28


State 47

   14 term: term TOKEN_MODULUS • difactor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    difactor  go to state 66
    factor    go to state 27
    number    go to state 28


State 48

   15 term: term TOKEN_TENSOR_PRODUCT • difactor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    difactor  go to state 67
    factor    go to state 27
    number    go to state 28


State 49

   17 difactor: difactor TOKEN_POWER • factor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    factor  go to state 68
    number  go to state 28


State 50

   18 difactor: difactor TOKEN_TENSOR_PRODUCT_N_TIMES • factor

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    factor  go to state 69
    number  go to state 28


State 51

   35 reg: TOKEN_LCRBR fields TOKEN_RCRBR •

    $default  reduce using rule 35 (reg)


State 52

   36 circuit: TOKEN_NEXT • c_step circuit

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 70
    TOKEN_LPAREN           shift, and go to state 22

    expr      go to state 71
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    c_step    go to state 72


State 53

   37 circuit: TOKEN_ALIAS • c_alias circuit

    TOKEN_IDENT  shift, and go to state 2

    name     go to state 73
    c_alias  go to state 74


State 54

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR circuit •

    $default  reduce using rule 5 (decl)


State 55

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN •

    $default  reduce using rule 4 (decl)


State 56

   24 factor: TOKEN_SEPARATOR number TOKEN_GREATER •

    $default  reduce using rule 24 (factor)


State 57

   25 factor: TOKEN_LESS number TOKEN_SEPARATOR •

    $default  reduce using rule 25 (factor)


State 58

   20 factor: TOKEN_LPAREN name TOKEN_RPAREN •

    $default  reduce using rule 20 (factor)


State 59

   26 factor: TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 26 (factor)


State 60

   31 next_expr: TOKEN_SEPARATOR fields •

    $default  reduce using rule 31 (next_expr)


State 61

   30 next_expr: TOKEN_COMMA fields •

    $default  reduce using rule 30 (next_expr)


State 62

    9 algebra: algebra TOKEN_PLUS term •
   12 term: term • TOKEN_MUL difactor
   13     | term • TOKEN_DIV difactor
   14     | term • TOKEN_MODULUS difactor
   15     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 45
    TOKEN_DIV             shift, and go to state 46
    TOKEN_MODULUS         shift, and go to state 47
    TOKEN_TENSOR_PRODUCT  shift, and go to state 48

    $default  reduce using rule 9 (algebra)


State 63

   10 algebra: algebra TOKEN_MINUS term •
   12 term: term • TOKEN_MUL difactor
   13     | term • TOKEN_DIV difactor
   14     | term • TOKEN_MODULUS difactor
   15     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 45
    TOKEN_DIV             shift, and go to state 46
    TOKEN_MODULUS         shift, and go to state 47
    TOKEN_TENSOR_PRODUCT  shift, and go to state 48

    $default  reduce using rule 10 (algebra)


State 64

   12 term: term TOKEN_MUL difactor •
   17 difactor: difactor • TOKEN_POWER factor
   18         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 49
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 50

    $default  reduce using rule 12 (term)


State 65

   13 term: term TOKEN_DIV difactor •
   17 difactor: difactor • TOKEN_POWER factor
   18         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 49
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 50

    $default  reduce using rule 13 (term)


State 66

   14 term: term TOKEN_MODULUS difactor •
   17 difactor: difactor • TOKEN_POWER factor
   18         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 49
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 50

    $default  reduce using rule 14 (term)


State 67

   15 term: term TOKEN_TENSOR_PRODUCT difactor •
   17 difactor: difactor • TOKEN_POWER factor
   18         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 49
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 50

    $default  reduce using rule 15 (term)


State 68

   17 difactor: difactor TOKEN_POWER factor •

    $default  reduce using rule 17 (difactor)


State 69

   18 difactor: difactor TOKEN_TENSOR_PRODUCT_N_TIMES factor •

    $default  reduce using rule 18 (difactor)


State 70

   25 factor: TOKEN_LESS • number TOKEN_SEPARATOR
   41 c_step: TOKEN_LESS •
   42       | TOKEN_LESS • subsystem concurrent_gate

    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_LSQBR            shift, and go to state 75

    $default  reduce using rule 41 (c_step)

    number     go to state 37
    subsystem  go to state 76


State 71

   39 c_step: expr •
   40       | expr • subsystem concurrent_gate

    TOKEN_LSQBR  shift, and go to state 75

    $default  reduce using rule 39 (c_step)

    subsystem  go to state 77


State 72

   36 circuit: TOKEN_NEXT c_step • circuit

    TOKEN_NEXT   shift, and go to state 52
    TOKEN_ALIAS  shift, and go to state 53

    $default  reduce using rule 38 (circuit)

    circuit  go to state 78


State 73

   48 c_alias: name •
   49        | name • subsystem

    TOKEN_LSQBR  shift, and go to state 75

    $default  reduce using rule 48 (c_alias)

    subsystem  go to state 79


State 74

   37 circuit: TOKEN_ALIAS c_alias • circuit

    TOKEN_NEXT   shift, and go to state 52
    TOKEN_ALIAS  shift, and go to state 53

    $default  reduce using rule 38 (circuit)

    circuit  go to state 80


State 75

   43 subsystem: TOKEN_LSQBR • expr TOKEN_RSQBR
   44          | TOKEN_LSQBR • range TOKEN_RSQBR

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    expr      go to state 81
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    range     go to state 82


State 76

   42 c_step: TOKEN_LESS subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 83

    $default  reduce using rule 47 (concurrent_gate)

    concurrent_gate  go to state 84


State 77

   40 c_step: expr subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 83

    $default  reduce using rule 47 (concurrent_gate)

    concurrent_gate  go to state 85


State 78

   36 circuit: TOKEN_NEXT c_step circuit •

    $default  reduce using rule 36 (circuit)


State 79

   49 c_alias: name subsystem •

    $default  reduce using rule 49 (c_alias)


State 80

   37 circuit: TOKEN_ALIAS c_alias circuit •

    $default  reduce using rule 37 (circuit)


State 81

   43 subsystem: TOKEN_LSQBR expr • TOKEN_RSQBR
   45 range: expr • TOKEN_RANGE expr

    TOKEN_RANGE  shift, and go to state 86
    TOKEN_RSQBR  shift, and go to state 87


State 82

   44 subsystem: TOKEN_LSQBR range • TOKEN_RSQBR

    TOKEN_RSQBR  shift, and go to state 88


State 83

   46 concurrent_gate: TOKEN_AND • c_step

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 70
    TOKEN_LPAREN           shift, and go to state 22

    expr      go to state 71
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28
    c_step    go to state 89


State 84

   42 c_step: TOKEN_LESS subsystem concurrent_gate •

    $default  reduce using rule 42 (c_step)


State 85

   40 c_step: expr subsystem concurrent_gate •

    $default  reduce using rule 40 (c_step)


State 86

   45 range: expr TOKEN_RANGE • expr

    TOKEN_SEPARATOR        shift, and go to state 17
    TOKEN_COMPLEX_LITERAL  shift, and go to state 18
    TOKEN_MINUS            shift, and go to state 19
    TOKEN_SQRT             shift, and go to state 20
    TOKEN_LESS             shift, and go to state 21
    TOKEN_LPAREN           shift, and go to state 22

    expr      go to state 90
    algebra   go to state 24
    term      go to state 25
    difactor  go to state 26
    factor    go to state 27
    number    go to state 28


State 87

   43 subsystem: TOKEN_LSQBR expr TOKEN_RSQBR •

    $default  reduce using rule 43 (subsystem)


State 88

   44 subsystem: TOKEN_LSQBR range TOKEN_RSQBR •

    $default  reduce using rule 44 (subsystem)


State 89

   46 concurrent_gate: TOKEN_AND c_step •

    $default  reduce using rule 46 (concurrent_gate)


State 90

   45 range: expr TOKEN_RANGE expr •

    $default  reduce using rule 45 (range)
