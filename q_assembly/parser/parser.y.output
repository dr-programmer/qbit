Terminals unused in grammar

    TOKEN_COLON
    TOKEN_SEMI
    TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | ε

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN
    5     | TOKEN_LCRBR registers TOKEN_RCRBR circuit

    6 name: TOKEN_IDENT

    7 expr: algebra

    8 algebra: algebra TOKEN_PLUS term
    9        | algebra TOKEN_MINUS term
   10        | term

   11 term: term TOKEN_MUL factor
   12     | term TOKEN_DIV factor
   13     | term TOKEN_MODULUS factor
   14     | term TOKEN_TENSOR_PRODUCT factor
   15     | factor

   16 factor: TOKEN_LPAREN name TOKEN_RPAREN
   17       | TOKEN_MINUS factor
   18       | TOKEN_SQRT factor
   19       | number
   20       | TOKEN_SEPARATOR number TOKEN_GREATER
   21       | TOKEN_LESS number TOKEN_SEPARATOR
   22       | TOKEN_LPAREN expr TOKEN_RPAREN

   23 number: TOKEN_COMPLEX_LITERAL

   24 fields: expr next_expr
   25       | ε

   26 next_expr: TOKEN_COMMA fields
   27          | TOKEN_SEPARATOR fields
   28          | ε

   29 registers: reg registers
   30          | ε

   31 reg: TOKEN_LCRBR fields TOKEN_RCRBR

   32 circuit: TOKEN_NEXT c_step circuit
   33        | ε

   34 c_step: expr
   35       | expr subsystem concurrent_gate
   36       | TOKEN_LESS
   37       | TOKEN_LESS subsystem concurrent_gate

   38 subsystem: TOKEN_LSQBR number TOKEN_RSQBR
   39          | TOKEN_LSQBR range TOKEN_RSQBR

   40 range: number TOKEN_RANGE number

   41 concurrent_gate: TOKEN_AND c_step
   42                | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_RANGE (258) 40
    TOKEN_SEPARATOR (259) 20 21 27
    TOKEN_NEXT (260) 32
    TOKEN_AND (261) 41
    TOKEN_COMPLEX_LITERAL (262) 23
    TOKEN_IDENT (263) 6
    TOKEN_PLUS (264) 8
    TOKEN_MINUS (265) 9 17
    TOKEN_MUL (266) 11
    TOKEN_DIV (267) 12
    TOKEN_MODULUS (268) 13
    TOKEN_SQRT (269) 18
    TOKEN_TENSOR_PRODUCT (270) 14
    TOKEN_LESS (271) 21 36 37
    TOKEN_GREATER (272) 20
    TOKEN_LPAREN (273) 4 16 22
    TOKEN_RPAREN (274) 4 16 22
    TOKEN_LCRBR (275) 5 31
    TOKEN_RCRBR (276) 5 31
    TOKEN_LSQBR (277) 38 39
    TOKEN_RSQBR (278) 38 39
    TOKEN_COMMA (279) 26
    TOKEN_COLON (280)
    TOKEN_SEMI (281)
    TOKEN_ERROR (282)


Nonterminals, with rules where they appear

    $accept (28)
        on left: 0
    program <decl> (29)
        on left: 1
        on right: 0
    decl_list <decl> (30)
        on left: 2 3
        on right: 1 2
    decl <decl> (31)
        on left: 4 5
        on right: 2
    name <str> (32)
        on left: 6
        on right: 4 16
    expr <expr> (33)
        on left: 7
        on right: 22 24 34 35
    algebra <expr> (34)
        on left: 8 9 10
        on right: 7 8 9
    term <expr> (35)
        on left: 11 12 13 14 15
        on right: 8 9 10 11 12 13 14
    factor <expr> (36)
        on left: 16 17 18 19 20 21 22
        on right: 11 12 13 14 15 17 18
    number <complex> (37)
        on left: 23
        on right: 19 20 21 38 40
    fields <expr> (38)
        on left: 24 25
        on right: 4 26 27 31
    next_expr <expr> (39)
        on left: 26 27 28
        on right: 24
    registers <expr> (40)
        on left: 29 30
        on right: 5 29
    reg <expr> (41)
        on left: 31
        on right: 29
    circuit <expr> (42)
        on left: 32 33
        on right: 5 32
    c_step <expr> (43)
        on left: 34 35 36 37
        on right: 32 41
    subsystem <expr> (44)
        on left: 38 39
        on right: 35 37
    range <expr> (45)
        on left: 40
        on right: 39
    concurrent_gate <expr> (46)
        on left: 41 42
        on right: 35 37


State 0

    0 $accept: • program $end

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    name       go to state 6


State 1

    6 name: TOKEN_IDENT •

    $default  reduce using rule 6 (name)


State 2

    5 decl: TOKEN_LCRBR • registers TOKEN_RCRBR circuit

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 30 (registers)

    registers  go to state 8
    reg        go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: decl_list •

    $default  reduce using rule 1 (program)


State 5

    2 decl_list: decl • decl_list

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 11
    decl       go to state 5
    name       go to state 6


State 6

    4 decl: name • TOKEN_LPAREN fields TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 12


State 7

   31 reg: TOKEN_LCRBR • fields TOKEN_RCRBR

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 25 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 24


State 8

    5 decl: TOKEN_LCRBR registers • TOKEN_RCRBR circuit

    TOKEN_RCRBR  shift, and go to state 25


State 9

   29 registers: reg • registers

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 30 (registers)

    registers  go to state 26
    reg        go to state 9


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 decl_list: decl decl_list •

    $default  reduce using rule 2 (decl_list)


State 12

    4 decl: name TOKEN_LPAREN • fields TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 25 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 27


State 13

   20 factor: TOKEN_SEPARATOR • number TOKEN_GREATER

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 28


State 14

   23 number: TOKEN_COMPLEX_LITERAL •

    $default  reduce using rule 23 (number)


State 15

   17 factor: TOKEN_MINUS • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 29
    number  go to state 23


State 16

   18 factor: TOKEN_SQRT • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 30
    number  go to state 23


State 17

   21 factor: TOKEN_LESS • number TOKEN_SEPARATOR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 31


State 18

   16 factor: TOKEN_LPAREN • name TOKEN_RPAREN
   22       | TOKEN_LPAREN • expr TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_IDENT            shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    name     go to state 32
    expr     go to state 33
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23


State 19

   24 fields: expr • next_expr

    TOKEN_SEPARATOR  shift, and go to state 34
    TOKEN_COMMA      shift, and go to state 35

    $default  reduce using rule 28 (next_expr)

    next_expr  go to state 36


State 20

    7 expr: algebra •
    8 algebra: algebra • TOKEN_PLUS term
    9        | algebra • TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 37
    TOKEN_MINUS  shift, and go to state 38

    $default  reduce using rule 7 (expr)


State 21

   10 algebra: term •
   11 term: term • TOKEN_MUL factor
   12     | term • TOKEN_DIV factor
   13     | term • TOKEN_MODULUS factor
   14     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 39
    TOKEN_DIV             shift, and go to state 40
    TOKEN_MODULUS         shift, and go to state 41
    TOKEN_TENSOR_PRODUCT  shift, and go to state 42

    $default  reduce using rule 10 (algebra)


State 22

   15 term: factor •

    $default  reduce using rule 15 (term)


State 23

   19 factor: number •

    $default  reduce using rule 19 (factor)


State 24

   31 reg: TOKEN_LCRBR fields • TOKEN_RCRBR

    TOKEN_RCRBR  shift, and go to state 43


State 25

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR • circuit

    TOKEN_NEXT  shift, and go to state 44

    $default  reduce using rule 33 (circuit)

    circuit  go to state 45


State 26

   29 registers: reg registers •

    $default  reduce using rule 29 (registers)


State 27

    4 decl: name TOKEN_LPAREN fields • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 46


State 28

   20 factor: TOKEN_SEPARATOR number • TOKEN_GREATER

    TOKEN_GREATER  shift, and go to state 47


State 29

   17 factor: TOKEN_MINUS factor •

    $default  reduce using rule 17 (factor)


State 30

   18 factor: TOKEN_SQRT factor •

    $default  reduce using rule 18 (factor)


State 31

   21 factor: TOKEN_LESS number • TOKEN_SEPARATOR

    TOKEN_SEPARATOR  shift, and go to state 48


State 32

   16 factor: TOKEN_LPAREN name • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 49


State 33

   22 factor: TOKEN_LPAREN expr • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 50


State 34

   27 next_expr: TOKEN_SEPARATOR • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 25 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 51


State 35

   26 next_expr: TOKEN_COMMA • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 25 (fields)

    expr     go to state 19
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    fields   go to state 52


State 36

   24 fields: expr next_expr •

    $default  reduce using rule 24 (fields)


State 37

    8 algebra: algebra TOKEN_PLUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term    go to state 53
    factor  go to state 22
    number  go to state 23


State 38

    9 algebra: algebra TOKEN_MINUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term    go to state 54
    factor  go to state 22
    number  go to state 23


State 39

   11 term: term TOKEN_MUL • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 55
    number  go to state 23


State 40

   12 term: term TOKEN_DIV • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 56
    number  go to state 23


State 41

   13 term: term TOKEN_MODULUS • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 57
    number  go to state 23


State 42

   14 term: term TOKEN_TENSOR_PRODUCT • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 58
    number  go to state 23


State 43

   31 reg: TOKEN_LCRBR fields TOKEN_RCRBR •

    $default  reduce using rule 31 (reg)


State 44

   32 circuit: TOKEN_NEXT • c_step circuit

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 59
    TOKEN_LPAREN           shift, and go to state 18

    expr     go to state 60
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    c_step   go to state 61


State 45

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR circuit •

    $default  reduce using rule 5 (decl)


State 46

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN •

    $default  reduce using rule 4 (decl)


State 47

   20 factor: TOKEN_SEPARATOR number TOKEN_GREATER •

    $default  reduce using rule 20 (factor)


State 48

   21 factor: TOKEN_LESS number TOKEN_SEPARATOR •

    $default  reduce using rule 21 (factor)


State 49

   16 factor: TOKEN_LPAREN name TOKEN_RPAREN •

    $default  reduce using rule 16 (factor)


State 50

   22 factor: TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 22 (factor)


State 51

   27 next_expr: TOKEN_SEPARATOR fields •

    $default  reduce using rule 27 (next_expr)


State 52

   26 next_expr: TOKEN_COMMA fields •

    $default  reduce using rule 26 (next_expr)


State 53

    8 algebra: algebra TOKEN_PLUS term •
   11 term: term • TOKEN_MUL factor
   12     | term • TOKEN_DIV factor
   13     | term • TOKEN_MODULUS factor
   14     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 39
    TOKEN_DIV             shift, and go to state 40
    TOKEN_MODULUS         shift, and go to state 41
    TOKEN_TENSOR_PRODUCT  shift, and go to state 42

    $default  reduce using rule 8 (algebra)


State 54

    9 algebra: algebra TOKEN_MINUS term •
   11 term: term • TOKEN_MUL factor
   12     | term • TOKEN_DIV factor
   13     | term • TOKEN_MODULUS factor
   14     | term • TOKEN_TENSOR_PRODUCT factor

    TOKEN_MUL             shift, and go to state 39
    TOKEN_DIV             shift, and go to state 40
    TOKEN_MODULUS         shift, and go to state 41
    TOKEN_TENSOR_PRODUCT  shift, and go to state 42

    $default  reduce using rule 9 (algebra)


State 55

   11 term: term TOKEN_MUL factor •

    $default  reduce using rule 11 (term)


State 56

   12 term: term TOKEN_DIV factor •

    $default  reduce using rule 12 (term)


State 57

   13 term: term TOKEN_MODULUS factor •

    $default  reduce using rule 13 (term)


State 58

   14 term: term TOKEN_TENSOR_PRODUCT factor •

    $default  reduce using rule 14 (term)


State 59

   21 factor: TOKEN_LESS • number TOKEN_SEPARATOR
   36 c_step: TOKEN_LESS •
   37       | TOKEN_LESS • subsystem concurrent_gate

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_LSQBR            shift, and go to state 62

    $default  reduce using rule 36 (c_step)

    number     go to state 31
    subsystem  go to state 63


State 60

   34 c_step: expr •
   35       | expr • subsystem concurrent_gate

    TOKEN_LSQBR  shift, and go to state 62

    $default  reduce using rule 34 (c_step)

    subsystem  go to state 64


State 61

   32 circuit: TOKEN_NEXT c_step • circuit

    TOKEN_NEXT  shift, and go to state 44

    $default  reduce using rule 33 (circuit)

    circuit  go to state 65


State 62

   38 subsystem: TOKEN_LSQBR • number TOKEN_RSQBR
   39          | TOKEN_LSQBR • range TOKEN_RSQBR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 66
    range   go to state 67


State 63

   37 c_step: TOKEN_LESS subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 68

    $default  reduce using rule 42 (concurrent_gate)

    concurrent_gate  go to state 69


State 64

   35 c_step: expr subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 68

    $default  reduce using rule 42 (concurrent_gate)

    concurrent_gate  go to state 70


State 65

   32 circuit: TOKEN_NEXT c_step circuit •

    $default  reduce using rule 32 (circuit)


State 66

   38 subsystem: TOKEN_LSQBR number • TOKEN_RSQBR
   40 range: number • TOKEN_RANGE number

    TOKEN_RANGE  shift, and go to state 71
    TOKEN_RSQBR  shift, and go to state 72


State 67

   39 subsystem: TOKEN_LSQBR range • TOKEN_RSQBR

    TOKEN_RSQBR  shift, and go to state 73


State 68

   41 concurrent_gate: TOKEN_AND • c_step

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 59
    TOKEN_LPAREN           shift, and go to state 18

    expr     go to state 60
    algebra  go to state 20
    term     go to state 21
    factor   go to state 22
    number   go to state 23
    c_step   go to state 74


State 69

   37 c_step: TOKEN_LESS subsystem concurrent_gate •

    $default  reduce using rule 37 (c_step)


State 70

   35 c_step: expr subsystem concurrent_gate •

    $default  reduce using rule 35 (c_step)


State 71

   40 range: number TOKEN_RANGE • number

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 75


State 72

   38 subsystem: TOKEN_LSQBR number TOKEN_RSQBR •

    $default  reduce using rule 38 (subsystem)


State 73

   39 subsystem: TOKEN_LSQBR range TOKEN_RSQBR •

    $default  reduce using rule 39 (subsystem)


State 74

   41 concurrent_gate: TOKEN_AND c_step •

    $default  reduce using rule 41 (concurrent_gate)


State 75

   40 range: number TOKEN_RANGE number •

    $default  reduce using rule 40 (range)
