Terminals unused in grammar

    TOKEN_COLON
    TOKEN_SEMI
    TOKEN_ERROR


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl decl_list
    3          | ε

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN
    5     | TOKEN_LCRBR registers TOKEN_RCRBR circuit

    6 name: TOKEN_IDENT

    7 expr: algebra

    8 algebra: algebra TOKEN_PLUS term
    9        | algebra TOKEN_MINUS term
   10        | term

   11 term: term TOKEN_MUL difactor
   12     | term TOKEN_DIV difactor
   13     | term TOKEN_MODULUS difactor
   14     | term TOKEN_TENSOR_PRODUCT difactor
   15     | difactor

   16 difactor: difactor TOKEN_POWER factor
   17         | difactor TOKEN_TENSOR_PRODUCT_N_TIMES factor
   18         | factor

   19 factor: TOKEN_LPAREN name TOKEN_RPAREN
   20       | TOKEN_MINUS factor
   21       | TOKEN_SQRT factor
   22       | number
   23       | TOKEN_SEPARATOR number TOKEN_GREATER
   24       | TOKEN_LESS number TOKEN_SEPARATOR
   25       | TOKEN_LPAREN expr TOKEN_RPAREN

   26 number: TOKEN_COMPLEX_LITERAL

   27 fields: expr next_expr
   28       | ε

   29 next_expr: TOKEN_COMMA fields
   30          | TOKEN_SEPARATOR fields
   31          | ε

   32 registers: reg registers
   33          | ε

   34 reg: TOKEN_LCRBR fields TOKEN_RCRBR

   35 circuit: TOKEN_NEXT c_step circuit
   36        | ε

   37 c_step: expr
   38       | expr subsystem concurrent_gate
   39       | TOKEN_LESS
   40       | TOKEN_LESS subsystem concurrent_gate

   41 subsystem: TOKEN_LSQBR number TOKEN_RSQBR
   42          | TOKEN_LSQBR range TOKEN_RSQBR

   43 range: number TOKEN_RANGE number

   44 concurrent_gate: TOKEN_AND c_step
   45                | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOKEN_RANGE (258) 43
    TOKEN_SEPARATOR (259) 23 24 30
    TOKEN_NEXT (260) 35
    TOKEN_AND (261) 44
    TOKEN_COMPLEX_LITERAL (262) 26
    TOKEN_IDENT (263) 6
    TOKEN_PLUS (264) 8
    TOKEN_MINUS (265) 9 20
    TOKEN_MUL (266) 11
    TOKEN_DIV (267) 12
    TOKEN_MODULUS (268) 13
    TOKEN_TENSOR_PRODUCT (269) 14
    TOKEN_POWER (270) 16
    TOKEN_TENSOR_PRODUCT_N_TIMES (271) 17
    TOKEN_SQRT (272) 21
    TOKEN_LESS (273) 24 39 40
    TOKEN_GREATER (274) 23
    TOKEN_LPAREN (275) 4 19 25
    TOKEN_RPAREN (276) 4 19 25
    TOKEN_LCRBR (277) 5 34
    TOKEN_RCRBR (278) 5 34
    TOKEN_LSQBR (279) 41 42
    TOKEN_RSQBR (280) 41 42
    TOKEN_COMMA (281) 29
    TOKEN_COLON (282)
    TOKEN_SEMI (283)
    TOKEN_ERROR (284)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program <decl> (31)
        on left: 1
        on right: 0
    decl_list <decl> (32)
        on left: 2 3
        on right: 1 2
    decl <decl> (33)
        on left: 4 5
        on right: 2
    name <str> (34)
        on left: 6
        on right: 4 19
    expr <expr> (35)
        on left: 7
        on right: 25 27 37 38
    algebra <expr> (36)
        on left: 8 9 10
        on right: 7 8 9
    term <expr> (37)
        on left: 11 12 13 14 15
        on right: 8 9 10 11 12 13 14
    difactor <expr> (38)
        on left: 16 17 18
        on right: 11 12 13 14 15 16 17
    factor <expr> (39)
        on left: 19 20 21 22 23 24 25
        on right: 16 17 18 20 21
    number <complex> (40)
        on left: 26
        on right: 22 23 24 41 43
    fields <expr> (41)
        on left: 27 28
        on right: 4 29 30 34
    next_expr <expr> (42)
        on left: 29 30 31
        on right: 27
    registers <expr> (43)
        on left: 32 33
        on right: 5 32
    reg <expr> (44)
        on left: 34
        on right: 32
    circuit <expr> (45)
        on left: 35 36
        on right: 5 35
    c_step <expr> (46)
        on left: 37 38 39 40
        on right: 35 44
    subsystem <expr> (47)
        on left: 41 42
        on right: 38 40
    range <expr> (48)
        on left: 43
        on right: 42
    concurrent_gate <expr> (49)
        on left: 44 45
        on right: 38 40


State 0

    0 $accept: • program $end

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    name       go to state 6


State 1

    6 name: TOKEN_IDENT •

    $default  reduce using rule 6 (name)


State 2

    5 decl: TOKEN_LCRBR • registers TOKEN_RCRBR circuit

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 33 (registers)

    registers  go to state 8
    reg        go to state 9


State 3

    0 $accept: program • $end

    $end  shift, and go to state 10


State 4

    1 program: decl_list •

    $default  reduce using rule 1 (program)


State 5

    2 decl_list: decl • decl_list

    TOKEN_IDENT  shift, and go to state 1
    TOKEN_LCRBR  shift, and go to state 2

    $default  reduce using rule 3 (decl_list)

    decl_list  go to state 11
    decl       go to state 5
    name       go to state 6


State 6

    4 decl: name • TOKEN_LPAREN fields TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 12


State 7

   34 reg: TOKEN_LCRBR • fields TOKEN_RCRBR

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 28 (fields)

    expr      go to state 19
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    fields    go to state 25


State 8

    5 decl: TOKEN_LCRBR registers • TOKEN_RCRBR circuit

    TOKEN_RCRBR  shift, and go to state 26


State 9

   32 registers: reg • registers

    TOKEN_LCRBR  shift, and go to state 7

    $default  reduce using rule 33 (registers)

    registers  go to state 27
    reg        go to state 9


State 10

    0 $accept: program $end •

    $default  accept


State 11

    2 decl_list: decl decl_list •

    $default  reduce using rule 2 (decl_list)


State 12

    4 decl: name TOKEN_LPAREN • fields TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 28 (fields)

    expr      go to state 19
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    fields    go to state 28


State 13

   23 factor: TOKEN_SEPARATOR • number TOKEN_GREATER

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 29


State 14

   26 number: TOKEN_COMPLEX_LITERAL •

    $default  reduce using rule 26 (number)


State 15

   20 factor: TOKEN_MINUS • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 30
    number  go to state 24


State 16

   21 factor: TOKEN_SQRT • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 31
    number  go to state 24


State 17

   24 factor: TOKEN_LESS • number TOKEN_SEPARATOR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 32


State 18

   19 factor: TOKEN_LPAREN • name TOKEN_RPAREN
   25       | TOKEN_LPAREN • expr TOKEN_RPAREN

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_IDENT            shift, and go to state 1
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    name      go to state 33
    expr      go to state 34
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24


State 19

   27 fields: expr • next_expr

    TOKEN_SEPARATOR  shift, and go to state 35
    TOKEN_COMMA      shift, and go to state 36

    $default  reduce using rule 31 (next_expr)

    next_expr  go to state 37


State 20

    7 expr: algebra •
    8 algebra: algebra • TOKEN_PLUS term
    9        | algebra • TOKEN_MINUS term

    TOKEN_PLUS   shift, and go to state 38
    TOKEN_MINUS  shift, and go to state 39

    $default  reduce using rule 7 (expr)


State 21

   10 algebra: term •
   11 term: term • TOKEN_MUL difactor
   12     | term • TOKEN_DIV difactor
   13     | term • TOKEN_MODULUS difactor
   14     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 10 (algebra)


State 22

   15 term: difactor •
   16 difactor: difactor • TOKEN_POWER factor
   17         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 44
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 45

    $default  reduce using rule 15 (term)


State 23

   18 difactor: factor •

    $default  reduce using rule 18 (difactor)


State 24

   22 factor: number •

    $default  reduce using rule 22 (factor)


State 25

   34 reg: TOKEN_LCRBR fields • TOKEN_RCRBR

    TOKEN_RCRBR  shift, and go to state 46


State 26

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR • circuit

    TOKEN_NEXT  shift, and go to state 47

    $default  reduce using rule 36 (circuit)

    circuit  go to state 48


State 27

   32 registers: reg registers •

    $default  reduce using rule 32 (registers)


State 28

    4 decl: name TOKEN_LPAREN fields • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 49


State 29

   23 factor: TOKEN_SEPARATOR number • TOKEN_GREATER

    TOKEN_GREATER  shift, and go to state 50


State 30

   20 factor: TOKEN_MINUS factor •

    $default  reduce using rule 20 (factor)


State 31

   21 factor: TOKEN_SQRT factor •

    $default  reduce using rule 21 (factor)


State 32

   24 factor: TOKEN_LESS number • TOKEN_SEPARATOR

    TOKEN_SEPARATOR  shift, and go to state 51


State 33

   19 factor: TOKEN_LPAREN name • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 52


State 34

   25 factor: TOKEN_LPAREN expr • TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 53


State 35

   30 next_expr: TOKEN_SEPARATOR • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 28 (fields)

    expr      go to state 19
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    fields    go to state 54


State 36

   29 next_expr: TOKEN_COMMA • fields

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    $default  reduce using rule 28 (fields)

    expr      go to state 19
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    fields    go to state 55


State 37

   27 fields: expr next_expr •

    $default  reduce using rule 27 (fields)


State 38

    8 algebra: algebra TOKEN_PLUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term      go to state 56
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24


State 39

    9 algebra: algebra TOKEN_MINUS • term

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    term      go to state 57
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24


State 40

   11 term: term TOKEN_MUL • difactor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    difactor  go to state 58
    factor    go to state 23
    number    go to state 24


State 41

   12 term: term TOKEN_DIV • difactor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    difactor  go to state 59
    factor    go to state 23
    number    go to state 24


State 42

   13 term: term TOKEN_MODULUS • difactor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    difactor  go to state 60
    factor    go to state 23
    number    go to state 24


State 43

   14 term: term TOKEN_TENSOR_PRODUCT • difactor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    difactor  go to state 61
    factor    go to state 23
    number    go to state 24


State 44

   16 difactor: difactor TOKEN_POWER • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 62
    number  go to state 24


State 45

   17 difactor: difactor TOKEN_TENSOR_PRODUCT_N_TIMES • factor

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 17
    TOKEN_LPAREN           shift, and go to state 18

    factor  go to state 63
    number  go to state 24


State 46

   34 reg: TOKEN_LCRBR fields TOKEN_RCRBR •

    $default  reduce using rule 34 (reg)


State 47

   35 circuit: TOKEN_NEXT • c_step circuit

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 64
    TOKEN_LPAREN           shift, and go to state 18

    expr      go to state 65
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    c_step    go to state 66


State 48

    5 decl: TOKEN_LCRBR registers TOKEN_RCRBR circuit •

    $default  reduce using rule 5 (decl)


State 49

    4 decl: name TOKEN_LPAREN fields TOKEN_RPAREN •

    $default  reduce using rule 4 (decl)


State 50

   23 factor: TOKEN_SEPARATOR number TOKEN_GREATER •

    $default  reduce using rule 23 (factor)


State 51

   24 factor: TOKEN_LESS number TOKEN_SEPARATOR •

    $default  reduce using rule 24 (factor)


State 52

   19 factor: TOKEN_LPAREN name TOKEN_RPAREN •

    $default  reduce using rule 19 (factor)


State 53

   25 factor: TOKEN_LPAREN expr TOKEN_RPAREN •

    $default  reduce using rule 25 (factor)


State 54

   30 next_expr: TOKEN_SEPARATOR fields •

    $default  reduce using rule 30 (next_expr)


State 55

   29 next_expr: TOKEN_COMMA fields •

    $default  reduce using rule 29 (next_expr)


State 56

    8 algebra: algebra TOKEN_PLUS term •
   11 term: term • TOKEN_MUL difactor
   12     | term • TOKEN_DIV difactor
   13     | term • TOKEN_MODULUS difactor
   14     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 8 (algebra)


State 57

    9 algebra: algebra TOKEN_MINUS term •
   11 term: term • TOKEN_MUL difactor
   12     | term • TOKEN_DIV difactor
   13     | term • TOKEN_MODULUS difactor
   14     | term • TOKEN_TENSOR_PRODUCT difactor

    TOKEN_MUL             shift, and go to state 40
    TOKEN_DIV             shift, and go to state 41
    TOKEN_MODULUS         shift, and go to state 42
    TOKEN_TENSOR_PRODUCT  shift, and go to state 43

    $default  reduce using rule 9 (algebra)


State 58

   11 term: term TOKEN_MUL difactor •
   16 difactor: difactor • TOKEN_POWER factor
   17         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 44
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 45

    $default  reduce using rule 11 (term)


State 59

   12 term: term TOKEN_DIV difactor •
   16 difactor: difactor • TOKEN_POWER factor
   17         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 44
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 45

    $default  reduce using rule 12 (term)


State 60

   13 term: term TOKEN_MODULUS difactor •
   16 difactor: difactor • TOKEN_POWER factor
   17         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 44
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 45

    $default  reduce using rule 13 (term)


State 61

   14 term: term TOKEN_TENSOR_PRODUCT difactor •
   16 difactor: difactor • TOKEN_POWER factor
   17         | difactor • TOKEN_TENSOR_PRODUCT_N_TIMES factor

    TOKEN_POWER                   shift, and go to state 44
    TOKEN_TENSOR_PRODUCT_N_TIMES  shift, and go to state 45

    $default  reduce using rule 14 (term)


State 62

   16 difactor: difactor TOKEN_POWER factor •

    $default  reduce using rule 16 (difactor)


State 63

   17 difactor: difactor TOKEN_TENSOR_PRODUCT_N_TIMES factor •

    $default  reduce using rule 17 (difactor)


State 64

   24 factor: TOKEN_LESS • number TOKEN_SEPARATOR
   39 c_step: TOKEN_LESS •
   40       | TOKEN_LESS • subsystem concurrent_gate

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_LSQBR            shift, and go to state 67

    $default  reduce using rule 39 (c_step)

    number     go to state 32
    subsystem  go to state 68


State 65

   37 c_step: expr •
   38       | expr • subsystem concurrent_gate

    TOKEN_LSQBR  shift, and go to state 67

    $default  reduce using rule 37 (c_step)

    subsystem  go to state 69


State 66

   35 circuit: TOKEN_NEXT c_step • circuit

    TOKEN_NEXT  shift, and go to state 47

    $default  reduce using rule 36 (circuit)

    circuit  go to state 70


State 67

   41 subsystem: TOKEN_LSQBR • number TOKEN_RSQBR
   42          | TOKEN_LSQBR • range TOKEN_RSQBR

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 71
    range   go to state 72


State 68

   40 c_step: TOKEN_LESS subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 73

    $default  reduce using rule 45 (concurrent_gate)

    concurrent_gate  go to state 74


State 69

   38 c_step: expr subsystem • concurrent_gate

    TOKEN_AND  shift, and go to state 73

    $default  reduce using rule 45 (concurrent_gate)

    concurrent_gate  go to state 75


State 70

   35 circuit: TOKEN_NEXT c_step circuit •

    $default  reduce using rule 35 (circuit)


State 71

   41 subsystem: TOKEN_LSQBR number • TOKEN_RSQBR
   43 range: number • TOKEN_RANGE number

    TOKEN_RANGE  shift, and go to state 76
    TOKEN_RSQBR  shift, and go to state 77


State 72

   42 subsystem: TOKEN_LSQBR range • TOKEN_RSQBR

    TOKEN_RSQBR  shift, and go to state 78


State 73

   44 concurrent_gate: TOKEN_AND • c_step

    TOKEN_SEPARATOR        shift, and go to state 13
    TOKEN_COMPLEX_LITERAL  shift, and go to state 14
    TOKEN_MINUS            shift, and go to state 15
    TOKEN_SQRT             shift, and go to state 16
    TOKEN_LESS             shift, and go to state 64
    TOKEN_LPAREN           shift, and go to state 18

    expr      go to state 65
    algebra   go to state 20
    term      go to state 21
    difactor  go to state 22
    factor    go to state 23
    number    go to state 24
    c_step    go to state 79


State 74

   40 c_step: TOKEN_LESS subsystem concurrent_gate •

    $default  reduce using rule 40 (c_step)


State 75

   38 c_step: expr subsystem concurrent_gate •

    $default  reduce using rule 38 (c_step)


State 76

   43 range: number TOKEN_RANGE • number

    TOKEN_COMPLEX_LITERAL  shift, and go to state 14

    number  go to state 80


State 77

   41 subsystem: TOKEN_LSQBR number TOKEN_RSQBR •

    $default  reduce using rule 41 (subsystem)


State 78

   42 subsystem: TOKEN_LSQBR range TOKEN_RSQBR •

    $default  reduce using rule 42 (subsystem)


State 79

   44 concurrent_gate: TOKEN_AND c_step •

    $default  reduce using rule 44 (concurrent_gate)


State 80

   43 range: number TOKEN_RANGE number •

    $default  reduce using rule 43 (range)
